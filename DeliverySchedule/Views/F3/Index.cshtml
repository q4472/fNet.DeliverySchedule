@using System.Data
@model DeliverySchedule.Models.F3Model
<style type="text/css">
    #deliveryschedule_views_f3_index input[type="text"] {
        border: 1px solid black;
        width: 70px;
        text-align: right;
    }

    #deliveryschedule_views_f3_index th {
        font-weight: bold;
        padding: 2px;
        border: 1px solid black;
    }

    #deliveryschedule_views_f3_index td {
        padding: 2px;
        border: 1px solid black;
    }

    #deliveryschedule_views_f3_index *._1c {
        background-color: #ff9;
    }

    #deliveryschedule_views_f3_index *.err-bg {
        background-color: #f99;
    }

    #deliveryschedule_views_f3_index *.err-color {
        color: red;
    }

    /* The Modal (background) */
    #deliveryschedule_views_f3_index div.modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

        /* Modal Content/Box */
        #deliveryschedule_views_f3_index div.modal div.content {
            background-color: #fefefe;
            margin: 15% auto; /* 15% from the top and centered */
            padding: 10px;
            border: 1px solid #888;
            width: 480px;
        }

            /* The Close Button */
            #deliveryschedule_views_f3_index div.modal div.content div.header span {
                color: #aaa;
                float: right;
                font-size: 28px;
                font-weight: bold;
            }

                #deliveryschedule_views_f3_index div.modal div.content div.header span:hover,
                #deliveryschedule_views_f3_index div.modal div.content div.header span:focus {
                    color: black;
                    text-decoration: none;
                    cursor: pointer;
                }

            /* Modal Header */
            #deliveryschedule_views_f3_index div.modal div.content div.header h2 {
                font-weight: bold;
                text-align: center;
            }

            #deliveryschedule_views_f3_index div.modal div.content table tr td {
                padding: 2px;
            }
</style>

<div id="deliveryschedule_views_f3_index">
    @if (Model != null)
    {
        <input type="hidden" name="SpecId" value="@Model.SpecId" />
        if (Model.Head != null && Model.Head.Rows.Count > 0)
        {
            <div style="margin: 4px">Идентификатор спецификации: @Model.SpecId</div>
            <table style="margin-left: 4px; margin-top: 4px; background-color: #cfc">
                <tr>
                    <td style="border: 1px solid black; padding: 4px;">
                        <div style="margin-bottom: 2px">
                            <span style="font-weight: bold; font-size: 12pt">Основные параметры&nbsp;&nbsp;&nbsp;</span>
                            <input type="button" class="save_button" value="Сохранить" disabled="disabled" onclick="DeliveryScheduleViewsF3Index.save()" />
                            <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Расчитать новый график</span>
                            <input type="checkbox" name="расчитать_новый_график" data-modified="0" />
                        </div>
                        <table class="pars" style="background-color: #ffd">
                            <tr>
                                <td>
                                    <table>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Дата контракта:</td>
                                            <td>
                                                <input type="text"
                                                       name="дата_контракта"
                                                       value="@Nskd.Convert.ToString(Model.Head.Rows[0]["дата_контракта"])"
                                                       data-modified="0"
                                                       class="date-selector" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Количество поставок:</td>
                                            <td>
                                                <input type="text"
                                                       name="количество_поставок"
                                                       value="@Model.Head.Rows[0]["количество_поставок"]"
                                                       data-modified="0"
                                                       onchange="this.value = Nskd.Validator.numberNorm(this.value, 1, 36)" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Период поставок:</td>
                                            <td>
                                                <input type="text"
                                                       name="период_поставок"
                                                       value="@Model.Head.Rows[0]["период_поставок"]"
                                                       data-modified="0"
                                                       onchange="this.value = Nskd.Validator.numberNorm(this.value, 0, 365)" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Дата первой поставки (получения покупателем):</td>
                                            <td>
                                                <input type="text"
                                                       name="дата_первой_поставки"
                                                       value="@Nskd.Convert.ToString(Model.Head.Rows[0]["дата_первой_поставки"])"
                                                       data-modified="0"
                                                       class="date-selector" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Срок от отгрузки до получения покупателем:</td>
                                            <td>
                                                @Model.sSiop
                                            </td>
                                            <td>&nbsp;=> Дата первой отгрузки: <span>@Model.sDpo</span></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Срок от поставки к нам до отгрузки покупателю:</td>
                                            <td>
                                                @Model.sSiso
                                            </td>
                                            <td>&nbsp;=> К нам на склад первая партия должна поступить: <span>@Model.sDps</span></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Срок от заявки на покупку до поставки к нам:</td>
                                            <td>
                                                @Model.sSizs
                                            </td>
                                            <td>&nbsp;=> Дата отправки заявки поставщику на первую партию: <span>@Model.sDozp</span></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Дата окончания поставок: </td>
                                            <td>
                                                <input type="text"
                                                       name="дата_окончания_поставок"
                                                       value="@Nskd.Convert.ToString(Model.Head.Rows[0]["дата_окончания_поставок"])"
                                                       data-modified="0"
                                                       class="date-selector" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Дата окончания действия контракта: </td>
                                            <td>
                                                <input type="text"
                                                       name="дата_окончания_действия_контракта"
                                                       value="@Nskd.Convert.ToString(Model.Head.Rows[0]["дата_окончания_действия_контракта"])"
                                                       data-modified="0"
                                                       class="date-selector" />
                                            </td>
                                            <td></td>
                                        </tr>
                                    </table>
                                </td>
                                <td>
                                    <table>
                                        <tr>
                                            <td>Поставка по графику</td>
                                            @if ((Boolean)Model.Head.Rows[0]["поставка_по_графику"])
                                            {
                                                <td><input type="checkbox" name="поставка_по_графику" data-modified="0" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="поставка_по_графику" data-modified="0" /></td>
                                            }
                                        </tr>
                                        <tr>
                                            <td>Поставка по заявкам</td>
                                            @if ((Boolean)Model.Head.Rows[0]["поставка_по_заявкам"])
                                            {
                                                <td><input type="checkbox" name="поставка_по_заявкам" data-modified="0" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="поставка_по_заявкам" data-modified="0" /></td>
                                            }
                                        </tr>
                                        <tr><td style="border: none">&nbsp;</td><td style="border: none">&nbsp;</td></tr>
                                        <tr>
                                            <td>Поставка по протоколу</td>
                                            @if ((Boolean)Model.Head.Rows[0]["поставка_по_протоколу"])
                                            {
                                                <td><input type="checkbox" name="поставка_по_протоколу" data-modified="0" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="поставка_по_протоколу" data-modified="0" /></td>
                                            }
                                        </tr>
                                        <tr>
                                            <td>Разрешена поставка по протоколу</td>
                                            <td><input type="checkbox" name="разрешена_поставка_по_протоколу" data-modified="0" disabled="disabled" /></td>
                                        </tr>
                                        <tr><td style="border: none">&nbsp;</td><td style="border: none">&nbsp;</td></tr>
                                        <tr>
                                            <td>Готово для отд. закупок</td>
                                            @if ((Boolean)Model.Head.Rows[0]["готово_для_отдела_закупок"])
                                            {
                                                <td><input type="checkbox" name="готово_для_отдела_закупок" data-modified="0" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="готово_для_отдела_закупок" data-modified="0" /></td>
                                            }
                                        </tr>
                                        <tr>
                                            <td>Принято отд. закупок</td>
                                            @if ((Boolean)Model.Head.Rows[0]["принято_отделом_закупок"])
                                            {
                                                <td><input type="checkbox" name="принято_отделом_закупок" data-modified="0" disabled="disabled" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="принято_отделом_закупок" data-modified="0" disabled="disabled" /></td>
                                            }
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </table>
                    </td>
                    <td>
                        <input type="button" value="Выделить все строки" onclick="DeliveryScheduleViewsF3Index.selectAllRows();" />
                        <br />
                        <br />
                        <input type="button" value="Снять выделение строк" onclick="DeliveryScheduleViewsF3Index.unselectAllRows();" />
                        <br />
                        <br />
                        <span style="font-weight: bold; font-size: 12pt">Действия для выделенных строк</span>
                        <br />
                        <br />
                        <input type="button" value="Объединить в группу" onclick="DeliveryScheduleViewsF3Index.execGroup();" />
                        <br />
                        <br />
                        <input type="button" value="Выполнить зачёт" onclick="DeliveryScheduleViewsF3Index.execCorr();" />
                        <br />
                        <br />
                        <input type="button" value="Установить срок годности" onclick="DeliveryScheduleViewsF3Index.setSG();" />
                    </td>
                </tr>
            </table>
        }
        if (Model.Table != null && Model.Table.Rows.Count > 0)
        {
            DataView tableView = Model.Table.DefaultView;
            //tableView.RowFilter = "[tp_id] is null";
            tableView.Sort = "[гр_наименование], [гр_форма_выпуска], [гр_дозировка], [количество], [номер_строки] desc";
            <table style="margin-left: 4px; margin-top: 4px; background-color: #cfc">
                <tr>
                    <td style="border: 1px solid black; padding: 4px;">
                        <div style="margin-bottom: 2px">
                            <span style="font-weight: bold; font-size: 12pt">График&nbsp;&nbsp;&nbsp;</span>
                            <input type="button" class="save2_button" value="Сохранить" onclick="DeliveryScheduleViewsF3Index.save2()" disabled="disabled" />
                            <span>&nbsp;&nbsp;&nbsp;Накладные 1с&nbsp;&nbsp;&nbsp;</span>
                            <input type="checkbox" class="_1c-show" onclick="DeliveryScheduleViewsF3Index.show1cRows(this)">
                        </div>
                        <table class="shedule_rows" style="background-color: #ffd">
                            <colgroup>
                                <col width="30" /> <!-- № -->
                                <col width="700" /><!-- Описание -->
                                <col width="20" /> <!-- Галка сопоставления строк -->
                                <col width="50" /> <!-- З -> С -->
                                <col width="50" /> <!-- С -> О -->
                                <col width="50" /> <!-- О -> П -->
                                <col width="80" /> <!-- Кол-во -->
                                <col width="80" /> <!-- Остаток по заявкам -->
                                <!-- колонки по графику, заявкам, протоколу -->
                            </colgroup>
                            <tr>
                                <th>№</th>
                                <th>Описание</th>
                                <th>&nbsp;</th>
                                <th>З -> С</th>
                                <th>С -> О</th>
                                <th>О -> П</th>
                                <th>Кол-во</th>
                                <th><span>Остаток по</span><br /><span>заявкам</span></th>
                                @if (Model.Shedule != null && Model.Shedule.Columns.Count > 1)
                                {
                                    for (Int32 ci = 1; ci < Model.Shedule.Columns.Count; ci++)
                                    {
                                        DataColumn dc = Model.Shedule.Columns[ci];
                                        String cn = String.Empty;
                                        String ct = String.Empty;
                                        if (dc.ColumnName.Length >= 8)
                                        {
                                            cn = dc.ColumnName.Substring(0, 8);
                                            if (dc.ColumnName.Length >= 10)
                                            {
                                                ct = dc.ColumnName.Substring(9, 1);
                                            }
                                        }
                                        <th>
                                            @if (ct == "0")
                                            {
                                                <span>Поставка по</span><br />
                                                <span>графику</span><br />
                                            }
                                            else if (ct == "1")
                                            {
                                                <span>Поставка по</span><br />
                                                <span>заявке</span><br />
                                            }
                                            else if (ct == "2")
                                            {
                                                <span>Поставка по</span><br />
                                                <span>протоколу</span><br />
                                            }
                                            else
                                            {
                                                <span>Поставка по</span><br />
                                                <span>?</span><br />
                                            }
                                            <input type="text"
                                                   name="@dc.ColumnName"
                                                   value="@cn"
                                                   data-modified="0"
                                                   class="date-selector" />
                                        </th>
                                    }
                                }
                                <th onclick="DeliveryScheduleViewsF3Index.addColumn()">&nbsp;*&nbsp;</th>
                            </tr>
                            @foreach (DataRowView dr in tableView)
                            {
                                String row_id = (dr["id"] == DBNull.Value) ? "" : dr["id"].ToString();
                                String tp_id = (dr["tp_id"] == DBNull.Value) ? "" : ((Guid)dr["tp_id"]).ToString();
                                if (tp_id != "")
                                {
                                    <tr data-row_id="@row_id" data-tp_uid="@tp_id" class="fnet">
                                        <td style="text-align: right">@dr["номер_строки"]</td>
                                        <td>@dr["descr"]</td>
                                        <td><input type="checkbox" class="row-flag" /></td>
                                        <td style="text-align: right">
                                            <input type="text" name="s1" value="@dr["срок_исполнения_заявка_склад"]"
                                                   data-modified="0" style="width: 30px" />
                                        </td>
                                        <td style="text-align: right">
                                            <input type="text" name="s2" value="@dr["срок_исполнения_склад_отгрузка"]"
                                                   data-modified="0" style="width: 30px" />
                                        </td>
                                        <td style="text-align: right">
                                            <input type="text" name="s3" value="@dr["срок_исполнения_отгрузка_покупатель"]"
                                                   data-modified="0" style="width: 30px" />
                                        </td>
                                        <td class="row-qty" style="text-align: right">@(((Decimal)dr["количество"]).ToString("n0"))</td>
                                        <td class="todo" style="text-align: right"></td>
                                        @if (Model.Shedule != null && Model.Shedule.Columns.Count > 1)
                                        {
                                            for (Int32 ci = 1; ci < Model.Shedule.Columns.Count; ci++)
                                            {
                                                DataColumn dc = Model.Shedule.Columns[ci];
                                                String cn = String.Empty;
                                                String ct = String.Empty;
                                                if (dc.ColumnName.Length >= 8)
                                                {
                                                    cn = dc.ColumnName.Substring(0, 8);
                                                    if (dc.ColumnName.Length >= 10)
                                                    {
                                                        ct = dc.ColumnName.Substring(9, 1);
                                                    }
                                                }
                                                String v = String.Empty;
                                                foreach (DataRow sdr in Model.Shedule.Rows)
                                                {
                                                    if ((String)sdr["tp_id"] == tp_id &&
                                                        sdr[ci] != DBNull.Value)
                                                    {
                                                        v = (String)sdr[ci];
                                                        break;
                                                    }
                                                }
                                                <td>
                                                    <input type="text"
                                                           name="@dc.ColumnName"
                                                           value="@v"
                                                           data-modified="0" />
                                                </td>
                                            }
                                        }
                                        <td></td>
                                    </tr>
                                }
                                else
                                {
                                    <tr data-row_id="@row_id" data-tp_uid="" class="_1c" style="display: none">
                                        <td>1c</td>
                                        <td>@dr["descr"]</td>
                                        <td><input type="checkbox" class="row-flag" /></td>
                                        <td colspan="3" style="text-align: right">Количество по накладным:</td>
                                        <td class="row-qty" style="text-align: right">@(((Decimal)dr["количество"]).ToString("n0"))</td>
                                    </tr>
                                }
                            }
                        </table>
                    </td>
                </tr>
            </table>
        }
    }
    <!-- Модальное окно -->
    <div class="modal">
        <div class="content">
            <div class="header">
                <span onclick="$(this).parent().parent().parent().hide();">&times;</span>
                <h2>&nbsp;</h2>
            </div>
            <table>
                <tr>
                    <td style="text-align: right">Поставка по графику:&nbsp;</td>
                    <td><input type="radio" name="ftype" value="0" checked="checked"></td>
                </tr>
                <tr>
                    <td style="text-align: right">Поставка по заявкам:&nbsp;</td>
                    <td><input type="radio" name="ftype" value="1"></td>
                </tr>
                <tr>
                    <td style="text-align: right">Поставка по протоколу:&nbsp;</td>
                    <td><input type="radio" name="ftype" value="2"></td>
                </tr>
            </table>
            <br />
            <div style="text-align: center">
                <input type="button" value="OK" onclick="DeliveryScheduleViewsF3Index.ftypeSelected();" />
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var DeliveryScheduleViewsF3Index = (function () {
        var mainDiv = $('#deliveryschedule_views_f3_index');
        var specId = mainDiv.find('input[name="SpecId"]').val();
        var pars = mainDiv.find('table.pars');
        var parsInputs = pars.find('input[type="text"], input[type="checkbox"]');
        var saveButton = mainDiv.find('input[type="button"].save_button');
        var shdl = mainDiv.find('table.shedule_rows');
        var save2Button = mainDiv.find('input[type="button"].save2_button');
        var sheduleInputs = shdl.find('input[type="text"]');
        var todoTds = shdl.find('td.todo');
        var dateSelectors = mainDiv.find('input.date-selector');
        var modalDiv = mainDiv.find('div.modal');

        function calcToDo(e) {
            var tr = $(e).closest('tr');
            calcRowToDo(tr);
        }
        function calcRowToDo(tr) {
            var td = tr.find('td.todo');
            var inps = tr.find('input[type="text"]');
            var s = parseInt(tr.find('td.row-qty').text().replace(/[^\d-]/g, ''));
            inps.each(function (i, e) {
                if (i > 2) {
                    var v = parseInt($(e).val().replace(/[^\d-]/g, ''));
                    if (isNaN(v)) v = 0;
                    s -= v;
                }
            });
            if (s < 0) {
                td.addClass('err-color');
                td.text(s.toString());
            } else if (s == 0) {
                td.removeClass('err-color');
                td.text('');
            } else {
                td.removeClass('err-color');
                td.text(s.toString());
            }
        }
        function checkForm() {
            var errs = checkFormForErrors();
            saveButton.prop('disabled', errs.parsError || pars.find('input[data-modified="1"]').length == 0);
            save2Button.prop('disabled', errs.shdlError || shdl.find('input[data-modified="1"]').length == 0);
        }
        function checkFormForErrors() {
            // Проверяем шапку на ошибку в датах
            var parsError = false;
            var d1 = $('input[name="дата_контракта"]');
            var d2 = $('input[name="дата_первой_поставки"]');
            var d3 = $('input[name="дата_окончания_поставок"]');
            var d4 = $('input[name="дата_окончания_действия_контракта"]');
            if (d2.datepicker('getDate') < d1.datepicker('getDate')) { d2.addClass('err-bg'); parsError = true; } else d2.removeClass('err-bg');
            if (d3.datepicker('getDate') < d2.datepicker('getDate')) { d3.addClass('err-bg'); parsError = true; } else d3.removeClass('err-bg');
            if (d4.datepicker('getDate') < d3.datepicker('getDate')) { d4.addClass('err-bg'); parsError = true; } else d4.removeClass('err-bg');
            // Проверяем таблицу на ошибку в датах
            var shdlError = false;
            var ds = shdl.find('input.date-selector');
            ds.each(function (i, e) {
                e = $(e);
                var d = e.datepicker('getDate');
                if (d < d2.datepicker('getDate') || d > d3.datepicker('getDate')) { e.addClass('err-bg'); shdlError = true; } else e.removeClass('err-bg');
            });
            // Прверяем таблицу на ошибки в столбце "по заявкам"
            var isOrd = pars.find('input[type="checkbox"][name="поставка_по_заявкам"]').prop('checked');
            todoTds.each(function (i, e) {
                e = $(e);
                // 1. все ячейки должны быть пустыми при отсутствии галки "по заявкам"
                if (!isOrd && e.text() != '') {
                    shdlError = true;
                    e.addClass('err-bg');
                } else {
                    e.removeClass('err-bg');
                }
                // 2. остаток "по заявкам" должен быть положительным
                if (e.text().indexOf('-') < 0) {
                    e.removeClass('err-color');
                } else {
                    shdlError = true;
                    e.addClass('err-color');
                }
            });
            return { 'parsError': parsError, 'shdlError': shdlError };
        }
        function doFormFormat() {
            var trs = shdl.find('tr');
            //alert(trs.length);
            // пропускаем заголовок и последнюю строку
            for (var index = 1; index < trs.length - 1;) {
                // проверка блока
                index = doBlock(trs, index);
            }
        }
        function currDate(format) {
            var date = new Date();
            var yyyy = date.getFullYear();
            var yy = '' + (yyyy - 2000);
            var mm = '' + (date.getMonth() + 1); if (mm.length == 1) mm = '0' + mm;
            var dd = '' + (date.getDate()); if (dd.length == 1) dd = '0' + dd;
            if (format && format == 'ru') {
                date = (dd + '.' + mm + '.' + yy);
            } else {
                date = (yyyy + '-' + mm + '-' + dd);
            }
            return date;
        }
        function doBlock(trs, index) {
            var ctr = $(trs[index++]); // current row
            var cTpUid = ctr.attr('data-tp_uid');
            // блок должен начинаться со строки спецификации
            if (cTpUid) {
                var ntr = $(trs[index]); //  берём следующую строку в блоке пока не двигаем индекс
                var nTpUid = ntr.attr('data-tp_uid');
                // она должна быть строкой из 1с (нет tp)
                if (!nTpUid) {
                    // это строка 1с
                    // Вроде всё в порядке, пока пропускаем, но надо проверить на соответствие предыдущей.
                    index++;
                } else {
                    // это строка не 1с - ошибка
                    ctr.addClass('err-bg'); // красим предыдущую
                    // переход на следующий блок
                }
            } else { // первая строка это не строка из специфакации
                ctr.addClass('err-bg'); // красим
            }
            return index;
        }

        parsInputs.keyup(function () {
            this.setAttribute('data-modified', '1');
            checkForm();
        });
        parsInputs.change(function () {
            this.setAttribute('data-modified', '1');
            checkForm();
        });
        sheduleInputs.keyup(function () {
            this.setAttribute('data-modified', '1');
            calcToDo(this);
            checkForm();
        });
        sheduleInputs.change(function () {
            this.setAttribute('data-modified', '1');
            if (!$(this).hasClass('date-selector')) {
                Nskd.Validator.nNorm(this, 0);
                calcToDo(this);
            }
            checkForm();
        });
        dateSelectors.datepicker({
            dateFormat: 'dd.mm.y',
            firstDay: 1,
            defaultDate: 0
        });
        dateSelectors.change(checkForm);

        // При загрузке с сервера сразу проверяем.
        todoTds.each(function (i, e) {
            calcRowToDo($(e).closest('tr'));
        });
        checkForm();

        return {
            save: function () {
                var inputs = pars.find('input[data-modified="1"]');
                if (inputs.length > 0) {
                    var rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'DeliverySchedule.F3.Save',
                        Parameters: [{ Name: "id", Value: specId }]
                    };
                    inputs.each(function (i, e) {
                        if (e.type === 'checkbox') rqp.Parameters.push({ Name: e.name, Value: e.checked });
                        else rqp.Parameters.push({ Name: e.name, Value: e.value });
                    });
                    if (pars.find('input[name="поставка_по_графику"]').prop('checked')
                        && mainDiv.find('input[name="расчитать_новый_график"]').prop('checked')) {
                        if (confirm('Внимание!\nБудет сформирован новый график для каждой позиции в спецификации.\n')) {
                            rqp.Parameters.push({ Name: 'расчитать_новый_график', Value: true });
                        };
                    }
                    //alert(Nskd.Json.toString(rqp)); return;
                    Nskd.Http.post({
                        url: '/DeliverySchedule/F3/Save',
                        rqp: rqp,
                        done: function (data) {
                            $('#_layout_content').html(data);
                        }
                    });
                    $('#_layout_content').html('');
                }
            },
            save2: function () {
                save2Button.prop('disabled', true);
                var inputs = shdl.find('input[data-modified="1"]');
                if (inputs.length > 0) {
                    var rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'DeliverySchedule.F3.Save2',
                        Parameters: [{ Name: "id", Value: specId }]
                    };
                    inputs.each(function (i, e) {
                        var tr = $(e).closest('tr');
                        var name = '';
                        var tpUid = tr.attr('data-tp_uid');
                        if (tpUid) { name = '_' + tpUid + '_'; }
                        name += e.name;
                        rqp.Parameters.push({ Name: name, Value: e.value });
                    });
                    //console.log(rqp); return;
                    Nskd.Http.post({
                        url: '/DeliverySchedule/F3/Save2',
                        rqp: rqp,
                        done: function (data) {
                            $('#_layout_content').html(data);
                        }
                    });
                    $('#_layout_content').html('');
                }
            },
            addColumn: function () {
                // select Ftype
                modalDiv.show();
            },
            ftypeSelected: function () {
                modalDiv.hide();
                var t = modalDiv.find('input[name="ftype"]:checked').val();
                var d = currDate('ru');
                var n = currDate() + ' ' + t;
                var trs = shdl.find('tr');
                trs.each(function (i, e) {
                    var tr = $(e);
                    var tp_uid = tr.attr('data-tp_uid');
                    //alert(tp_uid);
                    if (i == 0) {
                        var input = $('<input type="text" name="' + n + '" value="' + d + '" data-modified="0" class="date-selector" />');
                        input.datepicker({
                            dateFormat: 'dd.mm.y',
                            firstDay: 1,
                            defaultDate: '0',
                            minDate: '0'
                        });
                        input.change(function () {
                            this.setAttribute('data-modified', '1');
                            var input = $(this);
                            var th = input.closest('th');
                            var tr = th.closest('tr');
                            var ths = tr.find('th');
                            var index = ths.index(th);
                            trs.each(function (i, e) {
                                if (i != 0) $(e).find('td').eq(index).find('input').name = $(this).val();
                            });
                            checkForm();
                        });
                        input.keyup(function () {
                            this.setAttribute('data-modified', '1');
                            checkForm();
                        });
                        var th = $('<th>');
                        if (t == 0) th.append('<span>Поставка по</span><br /><span>графику</span><br />');
                        if (t == 1) th.append('<span>Поставка по</span><br /><span>заявкам</span><br />');
                        if (t == 2) th.append('<span>Поставка по</span><br /><span>протоколу</span><br />');
                        th.append(input);
                        tr.find('th').last().replaceWith(th);
                        //tr.append('<th onclick="DeliveryScheduleViewsF3Index.addColumn()">&nbsp;*&nbsp;</th>');
                    } else {
                        if (tp_uid) {
                            var input = $('<input type="text" name="' + n + '" value="" data-modified="0" />');
                            input.change(function () {
                                this.setAttribute('data-modified', '1');
                                Nskd.Validator.nNorm(this, 0);
                                calcToDo(this);
                                checkForm();
                            });
                            input.keyup(function () {
                                this.setAttribute('data-modified', '1');
                                calcToDo(this);
                                checkForm();
                            });
                            tr.find('td').last().append(input);
                            //tr.append('<td>');
                        } else { tr.find('td').last().append('&nbsp;'); }
                    }
                });
            },
            show1cRows: function (show) {
                if (show.checked) {
                    shdl.find('tr._1c').show();
                    doFormFormat();
                } else {
                    shdl.find('tr.fnet').removeClass('err-bg');
                    shdl.find('tr._1c').hide();
                }
            },
            execCorr: function () {
                var checkedRowFlags = shdl.find('input.row-flag:checked');
                if (checkedRowFlags.length > 1) {
                    // todo добавить проверку - мин 1 строка из спец и мин 1 из 1с
                    // если строк > 2 - предупреждение "делать зачёты по одному"
                    checkedRowFlags.prop('checked', false);
                    var rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'DeliverySchedule.F3.Corr',
                        Parameters: [{ Name: 'spec_id', Value: specId }]
                    };
                    var row_ids = '';
                    checkedRowFlags.each(function () {
                        var tr = $(this).closest('tr');
                        var row_id = tr.attr('data-row_id');
                        var row_qty = tr.find('td.row-qty').text();
                        row_ids += row_id + ',' + row_qty + ';'
                    });
                    rqp.Parameters.push({ Name: 'row_ids', Value: row_ids.substr(0, row_ids.length - 1) });
                    //alert(Nskd.Json.toString(rqp));
                    Nskd.Http.post({
                        url: '/deliveryschedule/f3/corr',
                        rqp: rqp,
                        done: function (data) {
                            //alert(data);
                            alert('Строк добавленных в журнал "Зачёты": ' + checkedRowFlags.length);
                        },
                        fail: function () {
                            alert('Что-то не так.');
                        }
                    });
                } else {
                    alert('Ошибка. Строк добавленных в журнал "Зачёты" нет.');
                }
            },
            execGroup: function () {
                var checkedRowFlags = shdl.find('input.row-flag:checked');
                if (checkedRowFlags.length > 1) {
                    checkedRowFlags.prop('checked', false);
                    alert('Строк добавленных в журнал "Группы": ' + checkedRowFlags.length);
                } else {
                    alert('Ошибка. Строк добавленных в журнал "Группы" нет.');
                }
            },
            selectAllRows: function () {
                alert('selectAllRows');
            },
            unselectAllRows: function () {
                alert('unselectAllRows');
            },
            setSG: function () {
                alert('setSG');
            }
        };
    })();
</script>
