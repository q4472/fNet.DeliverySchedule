@using System.Data
@model DeliverySchedule.Models.F3Model
<style type="text/css">
    #deliveryschedule_views_f3_index input[type="text"] {
        border: 1px solid black;
        width: 70px;
        text-align: right;
    }

    #deliveryschedule_views_f3_index th {
        font-weight: bold;
        padding: 2px;
        border: 1px solid black;
    }

    #deliveryschedule_views_f3_index td {
        padding: 2px;
        border: 1px solid black;
    }

    #deliveryschedule_views_f3_index *._1c {
        background-color: #ff9;
    }

    #deliveryschedule_views_f3_index *.err-bg {
        background-color: #f99;
    }

    #deliveryschedule_views_f3_index *.err-color {
        color: red;
    }

    /* The Modal (background) */
    #deliveryschedule_views_f3_index div.modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

        /* Modal Content/Box */
        #deliveryschedule_views_f3_index div.modal div.content {
            background-color: #fefefe;
            margin: 15% auto; /* 15% from the top and centered */
            padding: 10px;
            border: 1px solid #888;
            width: 480px;
        }

            /* The Close Button */
            #deliveryschedule_views_f3_index div.modal div.content div.header span {
                color: #aaa;
                float: right;
                font-size: 28px;
                font-weight: bold;
            }

                #deliveryschedule_views_f3_index div.modal div.content div.header span:hover,
                #deliveryschedule_views_f3_index div.modal div.content div.header span:focus {
                    color: black;
                    text-decoration: none;
                    cursor: pointer;
                }

            /* Modal Header */
            #deliveryschedule_views_f3_index div.modal div.content div.header h2 {
                font-weight: bold;
                text-align: center;
            }

            #deliveryschedule_views_f3_index div.modal div.content table tr td {
                padding: 2px;
            }
</style>
<div id="deliveryschedule_views_f3_index">
    @if (Model != null)
    {
        <input type="hidden" name="SpecId" value="@Model.SpecId" />
        <div class="header">
            @RenderPage("~/Views/F3/Header.cshtml")
        </div>
        <div class="table">
            @RenderPage("~/Views/F3/Table.cshtml")
        </div>
        <!-- Модальное окно -->
        <div class="modal">
            <div class="content">
                <div class="header">
                    <span onclick="$(this).closest('div.modal').hide();">&times;</span>
                    <h2>&nbsp;</h2>
                </div>
                <div class="body1" style="display: none;">
                    <table>
                        <tr>
                            <td style="text-align: right">Поставка по графику:&nbsp;</td>
                            <td><input type="radio" name="ftype" value="0" checked="checked"></td>
                        </tr>
                        <tr>
                            <td style="text-align: right">Поставка по заявкам:&nbsp;</td>
                            <td><input type="radio" name="ftype" value="1"></td>
                        </tr>
                        <tr>
                            <td style="text-align: right">Поставка по протоколу:&nbsp;</td>
                            <td><input type="radio" name="ftype" value="2"></td>
                        </tr>
                    </table>
                    <br />
                    <div style="text-align: center">
                        <input type="button" value="OK" onclick="DeliveryScheduleViewsF3Index.addColumn_();" />
                    </div>
                </div>
                <div class="body2" style="display: none;">
                    <input type="hidden" value="" />
                    <input type="text" /><br />
                    <input type="button" value="OK" onclick="DeliveryScheduleViewsF3Index.setE_();" />
                </div>
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    var DeliveryScheduleViewsF3Index = (function () {
        let mainDiv = $('#deliveryschedule_views_f3_index');
        let specId = mainDiv.find('input[name="SpecId"]').val(); if (!specId) return;
        let headerDiv = mainDiv.find('div.header');
        let tableDiv = mainDiv.find('div.table');
        let modalDiv = mainDiv.find('div.modal');

        modalDiv.find('div.body2 input[type="text"]').datepicker({ dateFormat: 'mm.y', firstDay: 1, changeYear: true });

        function checkForm() {
            let errs = checkFormForErrors();
            let saveButton = mainDiv.find('input[type="button"].save_button');
            saveButton.prop('disabled', errs.parsError || headerDiv.find('input[data-modified="1"]').length == 0);
            let save2Button = mainDiv.find('input[type="button"].save2_button');
            save2Button.prop('disabled', errs.shdlError || tableDiv.find('input[data-modified="1"]').length == 0);
        }
        function checkFormForErrors() {
            // Проверяем шапку на ошибку в датах
            let parsError = false;
            let d0 = new Date();
            let e1 = $('input[name="дата_контракта"]');
            let d1 = e1.datepicker('getDate');
            let e2 = $('input[name="дата_первой_поставки"]');
            let d2 = e2.datepicker('getDate');
            let e3 = $('input[name="дата_окончания_поставок"]');
            let d3 = e3.datepicker('getDate');
            let e4 = $('input[name="дата_окончания_действия_контракта"]');
            let d4 = e4.datepicker('getDate');
            if (d2 < d1) { e2.addClass('err-bg'); parsError = true; } else e2.removeClass('err-bg');
            if (d3 < d2) { e3.addClass('err-bg'); parsError = true; } else e3.removeClass('err-bg');
            if (d4 < d3) { e4.addClass('err-bg'); parsError = true; } else e4.removeClass('err-bg');
            // Проверяем таблицу на ошибку в датах
            let shdlError = false;
            tableDiv.find('input.date-selector').each(function (i, e) {
                e = $(e);
                let d = e.datepicker('getDate');
                if (d < d2 || d > d3 || d < d0) { e.addClass('err-bg'); shdlError = true; } else e.removeClass('err-bg');
            });
            // Прверяем таблицу на ошибки в столбце "по заявкам"
            let isOrd = headerDiv.find('input[type="checkbox"][name="поставка_по_заявкам"]').prop('checked');
            tableDiv.find('td.todo').each(function (i, e) {
                e = $(e);
                // 1. все ячейки должны быть пустыми при отсутствии галки "по заявкам"
                if (!isOrd && e.text() != '') {
                    shdlError = true;
                    e.addClass('err-bg');
                } else {
                    e.removeClass('err-bg');
                }
                // 2. остаток "по заявкам" должен быть положительным
                if (e.text().indexOf('-') < 0) {
                    e.removeClass('err-color');
                } else {
                    shdlError = true;
                    e.addClass('err-color');
                }
            });
            return { 'parsError': parsError, 'shdlError': shdlError };
        }
        function doFormFormat() {
            let trs = tableDiv.find('tr');
            //alert(trs.length);
            // пропускаем заголовок и последнюю строку
            for (let index = 1; index < trs.length - 1;) {
                // проверка блока
                index = doBlock(trs, index);
            }
        }
        function currDate(format) {
            let date = new Date();
            let yyyy = date.getFullYear();
            let yy = '' + (yyyy - 2000);
            let mm = '' + (date.getMonth() + 1); if (mm.length == 1) mm = '0' + mm;
            let dd = '' + (date.getDate()); if (dd.length == 1) dd = '0' + dd;
            if (format && format == 'ru') {
                date = (dd + '.' + mm + '.' + yy);
            } else {
                date = (yyyy + '-' + mm + '-' + dd);
            }
            return date;
        }
        function doBlock(trs, index) {
            let ctr = $(trs[index++]); // current row
            let cTpUid = ctr.attr('data-tp_uid');
            // блок должен начинаться со строки спецификации
            if (cTpUid) {
                let ntr = $(trs[index]); //  берём следующую строку в блоке пока не двигаем индекс
                let nTpUid = ntr.attr('data-tp_uid');
                // она должна быть строкой из 1с (нет tp)
                if (!nTpUid) {
                    // это строка 1с
                    // Вроде всё в порядке, пока пропускаем, но надо проверить на соответствие предыдущей.
                    index++;
                } else {
                    // это строка не 1с - ошибка
                    ctr.addClass('err-bg'); // красим предыдущую
                    // переход на следующий блок
                }
            } else { // первая строка это не строка из специфакации
                ctr.addClass('err-bg'); // красим
            }
            return index;
        }

        // При загрузке с сервера сразу проверяем.
        checkForm();

        return {
            save: function () {
                let saveButton = mainDiv.find('input[type="button"].save2_button');
                saveButton.prop('disabled', true);
                let inputs = headerDiv.find('input[data-modified="1"]');
                if (inputs.length > 0) {
                    let rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'DeliverySchedule.F3.Save',
                        Parameters: [{ Name: "id", Value: specId }]
                    };
                    inputs.each(function (i, e) {
                        if (e.type === 'checkbox') rqp.Parameters.push({ Name: e.name, Value: e.checked });
                        else rqp.Parameters.push({ Name: e.name, Value: e.value });
                    });
                    if (headerDiv.find('input[name="поставка_по_графику"]').prop('checked')
                        && mainDiv.find('input[name="расчитать_новый_график"]').prop('checked')) {
                        if (confirm('Внимание!\nБудет сформирован новый график для каждой позиции в спецификации.\n')) {
                            rqp.Parameters.push({ Name: 'расчитать_новый_график', Value: true });
                        };
                    }
                    //console.log(rqp); return;
                    Nskd.Http.post({
                        url: '/DeliverySchedule/F3/Save',
                        rqp: rqp,
                        done: function (data) {
                            $('#_layout_content').html(data);
                        }
                    });
                    $('#_layout_content').html('');
                }
            },
            save2: function () {
                let save2Button = mainDiv.find('input[type="button"].save2_button');
                save2Button.prop('disabled', true);
                let inputs = tableDiv.find('input[data-modified="1"]');
                if (inputs.length > 0) {
                    let rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'DeliverySchedule.F3.Index.Save2',
                        Parameters: [{ Name: "id", Value: specId }]
                    };
                    inputs.each(function (i, e) {
                        let tr = $(e).closest('tr');
                        let name = '';
                        let tpUid = tr.attr('data-tp_uid');
                        if (tpUid) { name = tpUid + ' '; }
                        name += e.name;
                        rqp.Parameters.push({ Name: name, Value: e.value });
                    });
                    //console.log(rqp); return;
                    Nskd.Http.post({
                        url: '/deliveryschedule/f3',
                        rqp: rqp,
                        done: function (data) {
                            mainDiv.find('div.table').html(data);
                        }
                    });
                    mainDiv.find('div.table').html('');
                }
            },
            addColumn: function () {
                // select Ftype
                modalDiv.find('div.body1').show();
                modalDiv.find('div.body2').hide();
                modalDiv.show();
            },
            addColumn_: function () {
                modalDiv.hide();
                let fType = modalDiv.find('input[name="ftype"]:checked').val();
                let rqp = {
                    Session: Nskd.Server.SessionId,
                    Command: 'DeliverySchedule.F3.Index.AddColumn',
                    Parameters: [
                        { Name: 'код_спецификации', Value: specId },
                        { Name: 'тип_формирования', Value: fType }
                    ]
                };
                //console.log(rqp); return;
                tableDiv.html('');
                Nskd.Http.post({
                    url: '/deliveryschedule/f3',
                    rqp: rqp,
                    done: function (data) {
                        tableDiv.html(data);
                    }
                });
            },
            show1cRows: function (show) {
                if (show.checked) {
                    tableDiv.find('tr._1c').show();
                    doFormFormat();
                } else {
                    tableDiv.find('tr.fnet').removeClass('err-bg');
                    tableDiv.find('tr._1c').hide();
                }
            },
            execCorr: function () {
                let checkedRowFlags = tableDiv.find('input.row-flag:checked');
                if (checkedRowFlags.length > 1) {
                    // todo добавить проверку - мин 1 строка из спец и мин 1 из 1с
                    // если строк > 2 - предупреждение "делать зачёты по одному"
                    checkedRowFlags.prop('checked', false);
                    let rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'DeliverySchedule.F3.Corr',
                        Parameters: [{ Name: 'spec_id', Value: specId }]
                    };
                    let row_ids = '';
                    checkedRowFlags.each(function () {
                        let tr = $(this).closest('tr');
                        let row_id = tr.attr('data-row_id');
                        let row_qty = tr.find('td.row-qty').text();
                        row_ids += row_id + ',' + row_qty + ';'
                    });
                    rqp.Parameters.push({ Name: 'row_ids', Value: row_ids.substr(0, row_ids.length - 1) });
                    //alert(Nskd.Json.toString(rqp));
                    Nskd.Http.post({
                        url: '/deliveryschedule/f3/corr',
                        rqp: rqp,
                        done: function (data) {
                            //alert(data);
                            alert('Строк добавленных в журнал "Зачёты": ' + checkedRowFlags.length);
                        },
                        fail: function () {
                            alert('Что-то не так.');
                        }
                    });
                } else {
                    alert('Ошибка. Строк добавленных в журнал "Зачёты" нет.');
                }
            },
            execGroup: function () {
                let checkedRowFlags = tableDiv.find('input.row-flag:checked');
                if (checkedRowFlags.length > 1) {
                    checkedRowFlags.prop('checked', false);
                    alert('Строк добавленных в журнал "Группы": ' + checkedRowFlags.length);
                } else {
                    alert('Ошибка. Строк добавленных в журнал "Группы" нет.');
                }
            },
            selectAllRows: function () {
                alert('selectAllRows');
            },
            unselectAllRows: function () {
                alert('unselectAllRows');
            },
            setE: function (element) {
                let ci = $(element).closest('th').attr('data-column-index');
                if (confirm('Установить срок годности для незаполненных полей?')) {
                    modalDiv.find('div.body1').hide();
                    modalDiv.find('div.body2').show();
                    modalDiv.find('div.body2 input[type="hidden"]').val(ci);
                    modalDiv.show();
                }
            },
            setE_: function () {
                modalDiv.hide();
                let ci = parseInt(modalDiv.find('div.body2 input[type="hidden"]').val());
                let v = modalDiv.find('div.body2 input[type="text"]').val();
                if (v) {
                    tableDiv.find('td.e[data-column-index="' + (ci + 1) + '"] input').each(function (index, element) {
                        if (!element.value) {
                            element.value = v;
                            element.setAttribute('data-modified', '1');
                        }
                    });
                    checkForm();
                }
            },
            checkForm: function () {
                checkForm();
            },
            send: function (uid) {
                if (confirm('Передать заявку в отдел снабжения и заблокировать столбец?')) {
                    let rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'DeliverySchedule.F3.Index.Send',
                        Parameters: [
                            { Name: "код_спецификации", Value: specId },
                            { Name: "uid", Value: uid }]
                    };
                    //console.log(rqp); return;
                    tableDiv.html('');
                    Nskd.Http.post({
                        url: '/deliveryschedule/f3',
                        rqp: rqp,
                        done: function (data) {
                            tableDiv.html(data);
                        }
                    });
                }
            },
            getSpecId: function () {
                return specId;
            },
            setTableDivHtml: function (html) {
                tableDiv.html(html);
            }
        };
    })();
</script>
