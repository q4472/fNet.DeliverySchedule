@using System.Data
@model DeliverySchedule.Models.F3Model

<style type="text/css">
    #deliveryschedule_views_f3_index input[type="text"] {
        border: 1px solid black;
        width: 70px;
        text-align: right;
    }

    #deliveryschedule_views_f3_index th {
        font-weight: bold;
        padding: 2px;
        border: 1px solid black;
    }

    #deliveryschedule_views_f3_index td {
        padding: 2px;
        border: 1px solid black;
    }

    #deliveryschedule_views_f3_index *.err-bg {
        background-color: #f99;
    }

    #deliveryschedule_views_f3_index *.err-color {
        color: red;
    }
</style>

<div id="deliveryschedule_views_f3_index">
    @if (Model != null)
    {
        <input type="hidden" name="SpecId" value="@Model.SpecId" />
        if (Model.Head != null && Model.Head.Rows.Count > 0)
        {
            Object o = Model.Head.Rows[0]["дата_первой_поставки"];

            Object oSiop = Model.Head.Rows[0]["срок_исполнения_отгрузка_покупатель"];
            String sSiop = String.Empty;
            DateTime? dDpo = null;
            String sDpo = String.Empty;
            if (oSiop != DBNull.Value)
            {
                sSiop = ((Int32)oSiop).ToString();
                if (o != DBNull.Value)
                {
                    dDpo = ((DateTime)o).AddDays(-(Int32)oSiop);
                    sDpo = ((DateTime)dDpo).ToString("dd.MM.yy");
                }
            }

            Object oSiso = Model.Head.Rows[0]["срок_исполнения_склад_отгрузка"];
            String sSiso = String.Empty;
            DateTime? dDps = null;
            String sDps = String.Empty;
            if (oSiso != DBNull.Value)
            {
                sSiso = ((Int32)oSiso).ToString();
                if (dDpo != null)
                {
                    dDps = ((DateTime)dDpo).AddDays(-(Int32)oSiso);
                    sDps = ((DateTime)dDps).ToString("dd.MM.yy");
                }
            }

            Object oSizs = Model.Head.Rows[0]["срок_исполнения_заявка_склад"];
            String sSizs = String.Empty;
            DateTime? dDozp = null;
            String sDozp = String.Empty;
            if (oSizs != DBNull.Value)
            {
                sSizs = ((Int32)oSizs).ToString();
                if (dDps != null)
                {
                    dDozp = ((DateTime)dDps).AddDays(-(Int32)oSizs);
                    sDozp = ((DateTime)dDozp).ToString("dd.MM.yy");
                }
            }

            <div style="margin: 4px">Идентификатор спецификации: @Model.SpecId</div>
            <table style="margin-left: 4px; margin-top: 4px; background-color: #cfc">
                <tr>
                    <td style="border: 1px solid black; padding: 4px;">
                        <div style="margin-bottom: 2px">
                            <span style="font-weight: bold; font-size: 12pt">Основные параметры&nbsp;&nbsp;&nbsp;</span>
                            <input type="button" class="save_button" value="Сохранить" disabled="disabled" onclick="OrderF3Index.save()" />
                            <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Расчитать новый график</span>
                            <input type="checkbox" name="расчитать_новый_график" data-modified="0" />
                        </div>
                        <table class="pars" style="background-color: #ffd">
                            <tr>
                                <td>
                                    <table>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Дата контракта:</td>
                                            <td>
                                                <input type="text"
                                                       name="дата_контракта"
                                                       value="@Nskd.Convert.ToString(Model.Head.Rows[0]["дата_контракта"])"
                                                       data-modified="0"
                                                       class="date-selector" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Количество поставок:</td>
                                            <td>
                                                <input type="text"
                                                       name="количество_поставок"
                                                       value="@Model.Head.Rows[0]["количество_поставок"]"
                                                       data-modified="0"
                                                       onchange="this.value = Nskd.Validator.numberNorm(this.value, 1, 36)" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Период поставок:</td>
                                            <td>
                                                <input type="text"
                                                       name="период_поставок"
                                                       value="@Model.Head.Rows[0]["период_поставок"]"
                                                       data-modified="0"
                                                       onchange="this.value = Nskd.Validator.numberNorm(this.value, 0, 365)" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Дата первой поставки (получения покупателем):</td>
                                            <td>
                                                <input type="text"
                                                       name="дата_первой_поставки"
                                                       value="@Nskd.Convert.ToString(Model.Head.Rows[0]["дата_первой_поставки"])"
                                                       data-modified="0"
                                                       class="date-selector" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Срок от отгрузки до получения покупателем:</td>
                                            <td>
                                                @sSiop
                                            </td>
                                            <td>&nbsp;=> Дата первой отгрузки: <span>@sDpo</span></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Срок от поставки к нам до отгрузки покупателю:</td>
                                            <td>
                                                @sSiso
                                            </td>
                                            <td>&nbsp;=> К нам на склад первая партия должна поступить: <span>@sDps</span></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Срок от заявки на покупку до поставки к нам:</td>
                                            <td>
                                                @sSizs
                                            </td>
                                            <td>&nbsp;=> Дата отправки заявки поставщику на первую партию: <span>@sDozp</span></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Дата окончания поставок: </td>
                                            <td>
                                                <input type="text"
                                                       name="дата_окончания_поставок"
                                                       value="@Nskd.Convert.ToString(Model.Head.Rows[0]["дата_окончания_поставок"])"
                                                       data-modified="0"
                                                       class="date-selector" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td style="text-align: right; padding-right: 4px">Дата окончания действия контракта: </td>
                                            <td>
                                                <input type="text"
                                                       name="дата_окончания_действия_контракта"
                                                       value="@Nskd.Convert.ToString(Model.Head.Rows[0]["дата_окончания_действия_контракта"])"
                                                       data-modified="0"
                                                       class="date-selector" />
                                            </td>
                                            <td></td>
                                        </tr>
                                    </table>
                                </td>
                                <td>
                                    <table>
                                        <tr>
                                            <td>Поставка по графику</td>
                                            @if ((Boolean)Model.Head.Rows[0]["поставка_по_графику"])
                                            {
                                                <td><input type="checkbox" name="поставка_по_графику" data-modified="0" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="поставка_по_графику" data-modified="0" /></td>
                                            }
                                        </tr>
                                        <tr>
                                            <td>Поставка по заявкам</td>
                                            @if ((Boolean)Model.Head.Rows[0]["поставка_по_заявкам"])
                                            {
                                                <td><input type="checkbox" name="поставка_по_заявкам" data-modified="0" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="поставка_по_заявкам" data-modified="0" /></td>
                                            }
                                        </tr>
                                        <tr>
                                            <td>Поставка по протоколу</td>
                                            @if ((Boolean)Model.Head.Rows[0]["поставка_по_протоколу"])
                                            {
                                                <td><input type="checkbox" name="поставка_по_протоколу" data-modified="0" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="поставка_по_протоколу" data-modified="0" /></td>
                                            }
                                        </tr>
                                        <tr><td style="border: none">&nbsp;</td><td style="border: none">&nbsp;</td></tr>
                                        <tr>
                                            <td>Готово для отд. закупок</td>
                                            @if ((Boolean)Model.Head.Rows[0]["готово_для_отдела_закупок"])
                                            {
                                                <td><input type="checkbox" name="готово_для_отдела_закупок" data-modified="0" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="готово_для_отдела_закупок" data-modified="0" /></td>
                                            }
                                        </tr>
                                        <tr>
                                            <td>Принято отд. закупок</td>
                                            @if ((Boolean)Model.Head.Rows[0]["принято_отделом_закупок"])
                                            {
                                                <td><input type="checkbox" name="принято_отделом_закупок" data-modified="0" disabled="disabled" checked="checked" /></td>
                                            }
                                            else
                                            {
                                                <td><input type="checkbox" name="принято_отделом_закупок" data-modified="0" disabled="disabled" /></td>
                                            }
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        }
        if (Model.Table != null && Model.Table.Rows.Count > 0)
        {
            <table style="margin-left: 4px; margin-top: 4px; background-color: #cfc">
                <tr>
                    <td style="border: 1px solid black; padding: 4px;">
                        <div style="margin-bottom: 2px">
                            <span style="font-weight: bold; font-size: 12pt">График&nbsp;&nbsp;&nbsp;</span>
                            <input type="button" class="save2_button" value="Сохранить" onclick="OrderF3Index.save2()" disabled="disabled" />
                        </div>
                        <table class="shedule_rows" style="background-color: #ffd">
                            <colgroup>
                                <col width="100" />
                                <col width="200" />
                                <col width="200" />
                                <col width="200" />
                                <col width="50" />
                                <col width="50" />
                                <col width="50" />
                                <col width="80" />
                                <col width="80" />
                                <col width="80" />
                            </colgroup>
                            <tr>
                                <th>Торговое наименование</th>
                                <th>Лекарственная форма и дозировка</th>
                                <th>Производитель</th>
                                <th>Страна</th>
                                <th>З -> С</th>
                                <th>С -> О</th>
                                <th>О -> П</th>
                                <th>Кол-во</th>
                                <th>Остаток по заявкам</th>
                                <th>Поставка по протоколу</th>
                                @if (Model.Shedule != null && Model.Shedule.Columns.Count > 2)
                                {
                                    for (Int32 ci = 2; ci < Model.Shedule.Columns.Count; ci++)
                                    {
                                        DataColumn dc = Model.Shedule.Columns[ci];
                                        String cn = dc.ColumnName;
                                        if (cn.Length >= 10)
                                        {
                                            cn = cn.Substring(8, 2) + "." + cn.Substring(5, 2) + "." + cn.Substring(2, 2);
                                        }
                                        <th>
                                            <input type="text"
                                                   name="@cn"
                                                   value="@cn"
                                                   data-modified="0"
                                                   class="date-selector" />
                                        </th>
                                    }
                                }
                                <th onclick="OrderF3Index.addColumn()">&nbsp;*&nbsp;</th>
                            </tr>
                            @foreach (DataRow dr in Model.Table.Rows)
                            {
                                Guid tp_id = (Guid)dr["tp_id"];
                            <tr data-tp_uid="@tp_id">
                                <td>@dr["наименование"]</td>
                                <td>@dr["лекарственная_форма_и_дозировка"]</td>
                                <td>@dr["производитель"]</td>
                                <td>@dr["страна"]</td>
                                <td style="text-align: right">
                                    <input type="text" name="s1" value="@dr["срок_исполнения_заявка_склад"]"
                                           data-modified="0" style="width: 30px" />
                                </td>
                                <td style="text-align: right">
                                    <input type="text" name="s2" value="@dr["срок_исполнения_склад_отгрузка"]"
                                           data-modified="0" style="width: 30px" />
                                </td>
                                <td style="text-align: right">
                                    <input type="text" name="s3" value="@dr["срок_исполнения_отгрузка_покупатель"]"
                                           data-modified="0" style="width: 30px" />
                                </td>
                                <td class="row-qty" style="text-align: right">@(((Decimal)dr["количество"]).ToString("n0"))</td>
                                <td class="todo" style="text-align: right"></td>
                                <td style="text-align: right">
                                    <input type="text" value="xxx"
                                           data-modified="0" style="width: 30px" />
                                </td>
                                @if (Model.Shedule != null && Model.Shedule.Rows.Count > 0)
                                {
                                    foreach (DataRow sdr in Model.Shedule.Rows)
                                    {
                                        if ((Guid)sdr["tp_id"] == tp_id)
                                        {
                                            if (Model.Shedule.Columns.Count > 2)
                                            {
                                                for (Int32 ci = 2; ci < Model.Shedule.Columns.Count; ci++)
                                                {
                                                    DataColumn dc = Model.Shedule.Columns[ci];
                                                    String cn = dc.ColumnName;
                                                    if (cn.Length >= 10)
                                                    {
                                                        cn = cn.Substring(8, 2) + "." + cn.Substring(5, 2) + "." + cn.Substring(2, 2);
                                                    }
                                                    <td>
                                                        <input type="text"
                                                               name="@cn"
                                                               value="@sdr[ci]"
                                                               data-modified="0" />
                                                    </td>
                                                }
                                            }
                                            break;
                                        }
                                    }
                                }
                                <td></td>
                            </tr>
                            }
                        </table>
                    </td>
                </tr>
            </table>
        }
    }
</div>
<script type="text/javascript">
    var OrderF3Index = (function () {
        var mainDiv = $('#deliveryschedule_views_f3_index');
        var specId = mainDiv.find('input[name="SpecId"]').val();
        var pars = mainDiv.find('table.pars');
        var parsInputs = pars.find('input[type="text"], input[type="checkbox"]');
        var saveButton = mainDiv.find('input[type="button"].save_button');
        var shdl = mainDiv.find('table.shedule_rows');
        var save2Button = mainDiv.find('input[type="button"].save2_button');
        var sheduleInputs = shdl.find('input[type="text"]');
        var todoTds = shdl.find('td.todo');
        var dateSelectors = mainDiv.find('input.date-selector');

        function calcToDo(e) {
            var tr = $(e).closest('tr');
            calcRowToDo(tr);
        }
        function calcRowToDo(tr) {
            var td = tr.find('td.todo');
            var inps = tr.find('input');
            var s = parseInt(tr.find('td.row-qty').text().replace(/[^\d-]/g, ''));
            inps.each(function (i, e) {
                if (i > 2) {
                    var v = parseInt($(e).val().replace(/[^\d-]/g, ''));
                    if (isNaN(v)) v = 0;
                    s -= v;
                }
            });
            if (s < 0) {
                td.addClass('err-color');
                td.text(s.toString());
            } else if (s == 0) {
                td.removeClass('err-color');
                td.text('');
            } else {
                td.removeClass('err-color');
                td.text(s.toString());
            }
        }
        function checkForm() {
            // Проверяем шапку на ошибку в датах
            var parsError = false;
            var d1 = $('input[name="дата_контракта"]');
            var d2 = $('input[name="дата_первой_поставки"]');
            var d3 = $('input[name="дата_окончания_поставок"]');
            var d4 = $('input[name="дата_окончания_действия_контракта"]');
            if (d2.datepicker('getDate') < d1.datepicker('getDate')) { d2.addClass('err-bg'); parsError = true; } else d2.removeClass('err-bg');
            if (d3.datepicker('getDate') < d2.datepicker('getDate')) { d3.addClass('err-bg'); parsError = true; } else d3.removeClass('err-bg');
            if (d4.datepicker('getDate') < d3.datepicker('getDate')) { d4.addClass('err-bg'); parsError = true; } else d4.removeClass('err-bg');
            saveButton.prop('disabled', parsError || pars.find('input[data-modified="1"]').length == 0);
            // Проверяем таблицу на ошибку в датах
            var shdlError = false;
            var ds = shdl.find('input.date-selector');
            ds.each(function (i, e) {
                e = $(e);
                var d = e.datepicker('getDate');
                if (d < d2.datepicker('getDate') || d > d3.datepicker('getDate')) { e.addClass('err-bg'); shdlError = true; } else e.removeClass('err-bg');
            });
            // Прверяем таблицу на ошибки в столбце "по заявкам"
            var isOrd = pars.find('input[type="checkbox"][name="поставка_по_заявкам"]').prop('checked');
            todoTds.each(function (i, e) {
                e = $(e);
                // 1. все ячейки должны быть пустыми при отсутствии галки "по заявкам"
                if (!isOrd && e.text() != '') {
                    shdlError = true;
                    e.addClass('err-bg');
                } else {
                    e.removeClass('err-bg');
                }
                // 2. остаток "по заявкам" должен быть положительным
                if (e.text().indexOf('-') < 0) {
                    e.removeClass('err-color');
                } else {
                    shdlError = true;
                    e.addClass('err-color');
                }
            });
            save2Button.prop('disabled', shdlError || shdl.find('input[data-modified="1"]').length == 0);
        }

        parsInputs.keyup(function () {
            this.setAttribute('data-modified', '1');
            checkForm();
        });
        parsInputs.change(function () {
            this.setAttribute('data-modified', '1');
            checkForm();
        });
        sheduleInputs.keyup(function () {
            this.setAttribute('data-modified', '1');
            calcToDo(this);
            checkForm();
        });
        sheduleInputs.change(function () {
            this.setAttribute('data-modified', '1');
            if (!$(this).hasClass('date-selector')) {
                Nskd.Validator.nNorm(this, 0);
                calcToDo(this);
            }
            checkForm();
        });
        dateSelectors.datepicker({
            dateFormat: 'dd.mm.y',
            firstDay: 1,
            defaultDate: 0
        });
        dateSelectors.change(checkForm);

        // При загрузке с сервера сразу проверяем.
        todoTds.each(function (i, e) {
            calcRowToDo($(e).closest('tr'));
        });
        checkForm();

        return {
            save: function () {
                var inputs = pars.find('input[data-modified="1"]');
                if (inputs.length > 0) {
                    var rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'DeliverySchedule.F3.Save',
                        Parameters: [{ Name: "id", Value: specId }]
                    };
                    inputs.each(function (i, e) {
                        if (e.type === 'checkbox') rqp.Parameters.push({ Name: e.name, Value: e.checked });
                        else rqp.Parameters.push({ Name: e.name, Value: e.value });
                    });
                    if (pars.find('input[name="поставка_по_графику"]').prop('checked')
                        && mainDiv.find('input[name="расчитать_новый_график"]').prop('checked')) {
                        if (confirm('Внимание!\nБудет сформирован новый график для каждой позиции в спецификации.\n')) {
                            rqp.Parameters.push({ Name: 'расчитать_новый_график', Value: true });
                        };
                    }
                    //alert(Nskd.Json.toString(rqp));
                    //return;
                    Nskd.Http.post({
                        url: '/DeliverySchedule/F3/Save',
                        rqp: rqp,
                        done: function (data) {
                            $('#_layout_content').html(data);
                        }
                    });
                }
            },
            save2: function () {
                save2Button.prop('disabled', true);
                var inputs = shdl.find('input[data-modified="1"]');
                if (inputs.length > 0) {
                    var rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'DeliverySchedule.F3.Save2',
                        Parameters: [{ Name: "id", Value: specId }]
                    };
                    inputs.each(function (i, e) {
                        var tr = $(e).closest('tr');
                        var name = '';
                        var tpUid = tr.attr('data-tp_uid');
                        if (tpUid) { name = '_' + tpUid + '_'; }
                        name += e.name;
                        rqp.Parameters.push({ Name: name, Value: e.value });
                    });
                    //alert(Nskd.Json.toString(rqp));
                    //return;
                    Nskd.Http.post({
                        url: '/DeliverySchedule/F3/Save2',
                        rqp: rqp,
                        done: function (data) {
                            $('#_layout_content').html(data);
                        }
                    });
                }
            },
            addColumn: function () {
                var date = new Date();
                var yy = '' + (date.getFullYear() - 2000);
                var mm = '' + (date.getMonth() + 1); if (mm.length == 1) mm = '0' + mm;
                var dd = '' + (date.getDate()); if (dd.length == 1) dd = '0' + dd;
                var colName = dd + '.' + mm + '.' + yy;
                var trs = shdl.find('tr');
                trs.each(function (i, e) {
                    var tr = $(e);
                    if (i == 0) {
                        var input = $('<input type="text" name="' + colName + '" value="' + colName + '" data-modified="0" class="date-selector" />');
                        input.datepicker({
                            dateFormat: 'dd.mm.y',
                            firstDay: 1,
                            defaultDate: 0
                        });
                        input.change(function () {
                            this.setAttribute('data-modified', '1');
                            var input = $(this);
                            var th = input.closest('th');
                            var tr = th.closest('tr');
                            var ths = tr.find('th');
                            var index = ths.index(th);
                            trs.each(function (i, e) {
                                if (i != 0) $(e).find('td').eq(index).find('input').name = $(this).val();
                            });
                            checkForm();
                        });
                        input.keyup(function () {
                            this.setAttribute('data-modified', '1');
                            checkForm();
                        });
                        var th = $('<th>');
                        th.append(input);
                        tr.find('th').last().replaceWith(th);
                        //tr.append('<th onclick="OrderF3Index.addColumn()">&nbsp;*&nbsp;</th>');
                    } else {
                        var input = $('<input type="text" name="' + colName + '" value="" data-modified="0" />');
                        input.change(function () {
                            this.setAttribute('data-modified', '1');
                            Nskd.Validator.nNorm(this, 0);
                            calcToDo(this);
                            checkForm();
                        });
                        input.keyup(function () {
                            this.setAttribute('data-modified', '1');
                            calcToDo(this);
                            checkForm();
                        });
                        tr.find('td').last().append(input);
                        //tr.append('<td>');
                    }
                });
            }
        };
    })();
</script>
